<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

    <description>Shiro Configuration</description>

    <!-- 缓存管理-->
    <bean id="cacheManager" class="com.eap.framework.base.pojo.RedisCacheManager"/>

    <bean id="adminRealm" class="com.eap.framework.filter.SystemAuthorizingRealm"/>

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="adminRealm"/>
        <property name="cacheManager" ref="cacheManager"/>
        <!--将session托管给redis进行管理，便于搭建集群系统-->
        <property name="sessionManager" ref="webSessionManager"/>
    </bean>
    <!--redis管理session-->
    <!--<bean id="webSessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">-->
    <bean id="webSessionManager" class="com.eap.framework.filter.ShiroWebSessionManager">
        <property name="sessionDAO" ref="redisSessionDao"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="globalSessionTimeout" value="${shiro.session.timeout}"/>
        <property name="sessionIdCookie" ref="sharesession"/>
        <property name="sessionIdUrlRewritingEnabled" value="false"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
    </bean>

    <!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
    <bean id="sharesession" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg name="name" value="SHAREJSESSIONID"/>
        <property name="path" value="/"/>
    </bean>

    <bean id="redisSessionDao" class="com.eap.framework.base.pojo.RedisSessionDao">
        <property name="expire" value="${shiro.session.timeout}"/>
    </bean>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login"/>
        <property name="successUrl" value="/main"/>
        <property name="unauthorizedUrl" value="/login"/>
        <property name="filters">
            <map>
                <entry key="logout" value-ref="systemLogoutFilter"/>
                <entry key="mobileLogout" value-ref="mobileLogoutFilter"/>
                <entry key="mobileAuthc" value-ref="mobileFilter"></entry>
            </map>
        </property>
        <property name="filterChainDefinitionMap" ref="filterChainDefinitionClass" />
    </bean>




    <bean id="filterChainDefinitionClass" class="com.eap.framework.filter.ShirofilterChainDefinitions" scope="singleton">
        <property name="filterChainDefinitions">
            <value>
                <!--/=anon-->
                /login=anon
                /logout=logout
               <!-- /register=anon-->
                /oauth/**=anon
                /resources/**=anon
                /captcha=anon
                /captcha/**=anon
                /wechat/callback=anon
                /mobile/login=anon
                /mobile/logout=mobileLogout
                /mobile/register=anon
                /mobile/register/**=anon
                /client/user/**=anon
                <!--免登陆预约-->
               <!-- /mobile/health/user_checkin=anon
                /reservation/checkRepeat=anon
                /reservation/mobile/saveDataWithoutLogin=anon
                /file/uploadMultipleFile=anon
                /person/idcard/checkRight=anon-->
                <!--免登陆预约-->
                /mobile/**=mobileAuthc
                /person/idcard/checkUnique=anon

                /**=authc
            </value>
        </property>
    </bean>


    <bean id="systemLogoutFilter" class="com.eap.framework.filter.SystemLogoutFilter">
        <property name="redirectUrl" value="/login"/>
    </bean>

    <bean id="mobileLogoutFilter" class="com.eap.framework.filter.SystemLogoutFilter">
        <property name="redirectUrl" value="/mobile/login"/>
    </bean>


    <bean id="mobileFilter"
          class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
        <property name="loginUrl" value="/mobile/login" />
        <property name="successUrl" value="/mobile" />
    </bean>

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <!-- 开启Shiro的注解(如@RequiresRoles,@RequiresPermissions),需借助SpringAOP扫描使用Shiro注解的类,并在必要时进行安全逻辑验证 -->
    <!-- 配置以下两个bean即可实现此功能 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
</beans>